AppType=JavaFX
Build1=Default,b4j.example
File1=b4x_bridge.zip
File2=Layout1.bjl
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=javaobject
Library2=jcore
Library3=jfx
Library4=jnetwork
Library5=jrandomaccessfile
Library6=jshell
Library7=jxui
Library8=b4xcollections
Module1=|absolute|C:\Users\H\Downloads\projects\NumPy\B4J\NumPy
Module2=PyBridge
Module3=PyComm
Module4=PyErrorHandler
Module5=PyUtils
Module6=PyWrapper
NumberOfFiles=2
NumberOfLibraries=8
NumberOfModules=6
Version=10
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region
#MergeLibraries: false
Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private xui As XUI 
	Private Button1 As B4XView
	Private Py As PyBridge
	Private WebView1 As WebView
	Type OcrPoint (X As Int, Y As Int)
	Type OcrResult (Points As List, Text As String, Score As Double)
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("Layout1")
'	MainForm.Show
	Py.Initialize(Me, "Py")
	Start
End Sub

Sub Button1_Click
	
End Sub

Private Sub Bridge_Disconnected
	Log("Disconnected")
End Sub

Private Sub MainForm_Closed
	Py.KillProcess
End Sub

Private Sub Start
'	Dim Linux As String = "/home/erel/python_env/bin/python"
	Dim PythonPath As String = "D:\python\python\python.exe"
	
	Dim opt As PyOptions = Py.CreateOptions(PythonPath)
'	opt.LocalPort = 53271
'	opt.PythonExecutable = ""
	opt.ForceCopyBridgeSrc = True
	opt.PyCacheFolder = "C:\Users\H\Downloads\projects"
	Py.Start(opt)
	Wait For Py_Connected (Success As Boolean)
	
'	PrintPythonVersion
'	Dim sum As PyWrapper = ExampleOfPythonMethod(10, 20)
'	sum.Print
'	Py.WrapObject(10).OperAdd(20).Print2("Value is:", "", False)
'	Wait For (Py.Flush) Complete (u As Boolean)
	'this also works:
	Dim np As NumPy
	np.Initialize(Py)
	
	Dim n As Long = DateTime.Now
'	For i = 1 To 100
		Dim arr As PyWrapper = np.CreateArray(Array(Array(1, 2, 3), Array(4, 5, 6)))
		
		arr.Get2D(Py.SliceAll, Py.SliceAll)
		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		arr.Get2D(Py.SliceAll, Py.SliceAll)
'		Py.PrintJoin(Array(Test, "bbb"), False)
		Py.Print("~de:main,234234")
'	Next
	Log(DateTime.Now - n)
	
End Sub


Private Sub Test As PyWrapper
	Return Py.WrapObject(100)
End Sub

Private Sub B4XPage_Background
	Py.KillProcess
End Sub

Private Sub PrintPythonVersion
	Py.ImportModule("sys").GetField("version").Print2("Python version:", "", False)
End Sub

'Tip: start typing Py and use the Py macros to create such methods:
Private Sub ExampleOfPythonMethod (X As Object, Y As Object) As PyWrapper
	Dim Code As String = $"
def ExampleOfPythonMethod (X, Y):
    #python code here
	return X + Y
"$
	Return Py.RunCode("ExampleOfPythonMethod", Array(X, Y), Code)
End Sub


Private Sub Py_Event (Name As String, Params As Map)
	Dim key As Int = Params.Get("key1")
	Dim o As PyObject
	o.Key = key
End Sub

